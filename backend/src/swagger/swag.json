{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Wine Companion API",
    "description": "",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "health",
      "description": "Healthcheck"
    },
    {
      "name": "ory",
      "description": "Route for testing ory authorization"
    },
    {
      "name": "users",
      "description": "API for users in the system"
    },
    {
      "name": "wines",
      "description": "API for wines"
    },
    {
      "name": "events",
      "description": "API for events"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/healthcheck": {
      "get": {
        "description": "server up?",
        "tags": ["health"],
        "responses": {
          "200": {
            "description": "success, server up"
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "Get a list of all users. You can filter it with a searchstring and set a limit (default 50)",
        "tags": ["users"],
        "parameters": [
          {
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "searchstring": {
                  "type": "string"
                },
                "limit": {
                  "type": "integer",
                  "default": 50
                }
              }
            },
            "name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "successfull operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["users"],
        "summary": "Add a new user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Pass username and password of the new user.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created object"
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "tags": ["users"],
        "responses": {
          "200": {
            "description": "Returns user object",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "description": "Edit a username",
        "tags": ["users"],
        "parameters": [
          {
            "in": "body",
            "description": "new username",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                }
              }
            },
            "name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully changed username"
          }
        }
      },
      "delete": {
        "description": "Remove a user completely from the system.",
        "tags": ["users"],
        "responses": {
          "200": {
            "description": "Successfully deleted user"
          }
        }
      }
    },
    "/users/{id}/events/attend": {
      "get": {
        "description": "get a list of all events a user attends",
        "tags": ["users"]
      }
    },
    "/users/{id}/events/host": {
      "get": {
        "description": "get a list of all events a user hosts",
        "tags": ["users"]
      }
    },
    "/wines": {
      "get": {
        "description": "get all wines",
        "tags": ["wines"]
      },
      "post": {
        "description": "create a wine",
        "tags": ["wines"]
      }
    },
    "/wines/{id}": {
      "get": {
        "description": "get a wine",
        "tags": ["wines"]
      },
      "put": {
        "description": "edit a wine",
        "tags": ["wines"]
      },
      "delete": {
        "description": "delete a wine",
        "tags": ["wines"]
      }
    },
    "/events": {
      "get": {
        "description": "get all public",
        "tags": ["events"]
      },
      "post": {
        "description": "create an event",
        "tags": ["events"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "description": "new event",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "date": {
                  "type": "date"
                },
                "organizer": {
                  "type": "object",
                  "properties": {
                    "id": "string",
                    "username": "string"
                  }
                },
                "link": {
                  "type": "string"
                },
                "max_participants": {
                  "type": "number"
                },
                "public": {
                  "type": "boolean"
                },
                "theme": {
                  "type": "string"
                },
                "wines": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "year": {
                        "type": "number"
                      },
                      "winery": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "/events/{id}": {
      "get": {
        "description": "get an event by id",
        "tags": ["events"]
      },
      "put": {
        "description": "edit an event",
        "tags": ["events"]
      },
      "delete": {
        "description": "delete an event",
        "tags": ["events"]
      }
    },
    "/whoami": {
      "get": {
        "description": "pass the session token to see wether a user is logged in or exists etc.",
        "tags": [
          "ory"
        ],
        "parameters": [
          {
            "name": "session_Token",
            "in": "header",
            "description": "valid ORY access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "user logged in, session data returned"
          },
          "401": {
            "description": "session token invalid."
          }
        }
      }
    }
  },
  "securityDefinitions": {

  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "confirmed": {
          "type": "boolean"
        },
        "username": {
          "type": "string"
        },
        "signup_type": {
          "type": "string"
        },
        "signup_date": {
          "type": "string"
        },
        "logged_in_devices": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "agreements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Agreement"
          }
        },
        "friends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Relationship"
          }
        },
        "events": {

        }
      }
    },
    "Wine": {
      "type": "object",
      "properties": {

      }
    },
    "Relationship": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "pending": {
          "type": "boolean"
        },
        "accepted": {
          "type": "boolean"
        },
        "accepted_date": {
          "type": "string"
        },
        "blocked": {
          "type": "boolean"
        },
        "blocked_date": {
          "type": "string"
        }
      }
    },
    "Agreement": {
      "type": "string"
    }
  }
}
